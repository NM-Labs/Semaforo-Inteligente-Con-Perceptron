clc; close all; clear all;size_img = [960, 1280];%% Binarizacion Carros Entrenamientocars= dir('Imgexp/Train/Cars/*.jpg');for k=1:length(cars)    car= imread(string(cars(k).folder) + '\' + string(cars(k).name));    car = imresize(car,[size_img]);    car_bin = BinarizeImg(car, 1);    car_flatten = car_bin(:)';    entradas(k,:) = car_flatten;    target(k) = 0;end%  squeezed = reshape(c(1,:,:,:),[z(2:end)]);%% Binarizacion Humanos Entrenamientohumans= dir('Imgexp/Train/Humans/*.jpg');for j=1:length(humans)    human= imread(string(humans(j).folder) + '\' + string(humans(j).name));    human = imresize(human,[size_img]);    human_bin = BinarizeImg(human, 1);%     human_r = imresize(human_bin,[size(car_bin)]);    human_flatten = human_bin(:)';%human_r    entradas(k+j,:) = human_flatten;    target(k+j) = 1;end%% Binarizacion Carros Validacionvalsc=dir('Imgexp/Val/Cars/*.jpg');for k=1:length(valsc)    valimgc = imread(string(valsc(k).folder) + '\' + string(valsc(k).name));    valimg_rc = imresize(valimgc,[size_img]);    valimg_binc = BinarizeImg(valimg_rc, 1);    valimg_flattenc = valimg_binc(:)';    entradasv(k,:) = valimg_flattenc;end%% Binarizacion Humanos Validacionvalsh=dir('Imgexp/Val/Humans/*.jpg');for j=1:length(valsh)    valimgh = imread(string(valsh(j).folder) + '\' + string(valsh(j).name));    valimg_rh = imresize(valimgh,[size_img]);    valimg_binh = BinarizeImg(valimg_rh, 1);    valimg_flattenh = valimg_binh(:)';    entradasv(k+j,:) = valimg_flattenh;end%% Guardado de Matriz de caracteristicas. fileID = fopen('MatrizCaracEnt1.csv','wt');formatSpec = '%d,';formatSpec2 = '%d %d';ent = size(entradas);entradasT = entradas';for i= 1:ent(1)    for j=1:ent(2)       fprintf(fileID, formatSpec, entradas(i,j));     end    fprintf(fileID,'\n'); end%% Guardado de Vector de Valores Esperados.fileTarget = fopen('VectorTarget.csv','wt');formatSpec = '%d\n';formatSpec2 = '%d %d';tar = size(target);targetT = target'; for i= 1:tar(2)    if i < tar(2)        fprintf(fileTarget, formatSpec, targetT(i));     else        fprintf(fileTarget, '%d', targetT(i));     endendfclose(fileTarget);